name: Sample Workflow

on:
  push:
  pull_request:

jobs:
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "[Push] Get commit message"
        if: github.event_name == 'push'
        id: push_get_commit_message
        run:
          echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)

      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)

    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] && echo "${{ steps.push_get_commit_message.outputs.push_commit_message }}" || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )

  skippable_job:
    name: Skippable Job
    runs-on: ubuntu-latest
    if: "!contains(needs.pre_ci.outputs.commit_message, 'MAR-')"
    needs: pre_ci
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
           fetch-depth: 0 

      - name: ls
        run: ls
          

      - name: Undo Push
        uses: exions/undo-push@v1
        with:
          branch: ${GITHUB_REF##*/}
          
      - name: STOP
        run: echo "COMMIT IT REVERT"


  good_commit:
    name: Good string in commit
    runs-on: ubuntu-latest
    if: "contains(needs.pre_ci.outputs.commit_message, 'MAR-')"
    needs: pre_ci
    steps:
      - name: next step
        run: echo "NEXT"

  build:
    runs-on: ubuntu-latest
    needs: good_commit
    steps:
      - uses: actions/checkout@v2
        with:
          path: checkout
      - name: COMMIT
        run: echo "COMMIT IT's build"

